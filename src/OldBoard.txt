import { Stage, Layer, Star, FastLayer } from 'react-konva';
import { Lanes } from './Lanes';
import { BackgroundArea } from './BackgroundArea';
import { DragCard } from './DragCard';
import { SnapshotManager } from './SnapshotManager';

export function Board() {

    return (<Stage width={window.innerWidth} height={window.innerHeight} ref={(r) => SnapshotManager.init(r)} >
    <Layer  >
      <BackgroundArea />
      <Lanes card={card} lanes={data} />
      {stars.map((star) => (
        <Star
        key={star.id}
        id={star.id}
        x={star.x}
        y={star.y}
        numPoints={5}
        innerRadius={20}
        outerRadius={40}
        fill="#89b717"
        opacity={0.8}
        draggable
        rotation={star.rotation}
        shadowColor="black"
        shadowBlur={10}
        shadowOpacity={0.6}
        shadowOffsetX={star.isDragging ? 10 : 5}
        shadowOffsetY={star.isDragging ? 10 : 5}
        scaleX={star.isDragging ? 1.2 : 1}
        scaleY={star.isDragging ? 1.2 : 1}
        onDragStart={handleDragStart}
        onDragEnd={handleDragEnd}
        />
        ))}
    </Layer>
    <FastLayer>
      <DragCard card={card} />
    </FastLayer>
  </Stage>);
}


 const handleDragStart = (e) => {
    const id = e.target.id();
    setStars(
      stars.map((star) => {
        return {
          ...star,
          isDragging: star.id === id,
        };
      })
    );
  };
  const handleDragEnd = (e) => {
    setStars(
      stars.map((star) => {
        return {
          ...star,
          isDragging: false,
        };
      })
    );
  };

  function generateShapes() {
  return [...Array(3)].map((_, i) => ({
    id: i.toString(),
    x: Math.random() * window.innerWidth,
    y: Math.random() * window.innerHeight,
    rotation: Math.random() * 180,
    isDragging: false,
  }));
}